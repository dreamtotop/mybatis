<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.top.mybatisdynamicsql.mapper.EmployeeMapper">
<!--
    if : 判断
    choose(when , otherwise) : 分支选择
    trim(where(封装查询条件) , set(封装修改条件)) : 截取字符串
    foreach :
    -->
               <!--            特殊字符要进行转义            -->
    <select id="getEmpsByConditionIf" resultType="org.top.mybatisdynamicsql.model.Employee">
        select * from employee
        where
        <if test="id!=null">
            id = #{id}
        </if>
        <if test="empName!=null and empName!=''">
            and emp_name=#{empName}
        </if>
        <if test="address!=null and address!=''">
            and address=#{address}
        </if>
    </select>

<!--    如果id为 null, 其他条件不为null,sql语句会出错   -->
<!--    <select id="getEmpsByCondition" resultType="org.top.mybatisdynamicsql.model.Employee">-->
<!--        &lt;!&ndash; 第一种解决方法 &ndash;&gt;-->
<!--        select * from employee-->
<!--        where 1=1-->
<!--        <if test="employee.id!=null">-->
<!--           and id = #{employee.id}-->
<!--        </if>-->
<!--        <if test="employee.empName!=null and employee.empName!=''">-->
<!--            and emp_name=#{employee.empName}-->
<!--        </if>-->
<!--        <if test="employee.address!=null and employee.address!=''">-->
<!--            and address=#{employee.address}-->
<!--        </if>-->
<!--    </select>-->

     <!--  第二种解决方法（处理and在前面） :  使用mybatis 的 where标签去除多余的and/or（如果 and在后面，还是会出现sql问题）-->
<!--    预编译sql: select * from employee WHERE address=?  -->
    <select id="getEmpsByConditionWhere" resultType="org.top.mybatisdynamicsql.model.Employee">
        select * from employee
        <where>
            <if test="employee.id!=null">
                id = #{employee.id}
            </if>
            <if test="employee.empName!=null and employee.empName!=''">
                and emp_name=#{employee.empName}
            </if>
            <if test="employee.address!=null and employee.address!=''">
                and address=#{employee.address}
            </if>
        </where>
    </select>

<!--    第三种解决方法：使用trim标签-->
    <select id="getEmpsByConditionTrim" resultType="org.top.mybatisdynamicsql.model.Employee">
        select * from employee
        where
        <trim suffixOverrides="and|or">
            <if test="employee.id!=null">
                id = #{employee.id} and
            </if>
            <if test="employee.empName!=null and employee.empName!=''">
                emp_name=#{employee.empName} and
            </if>
            <if test="employee.address!=null and employee.address!=''">
                 address=#{employee.address}
            </if>
        </trim>
    </select>


<!-- ======================================================   -->
<!--   choose 标签的使用   -->
    <select id="getEmpsByConditionChoose" resultType="org.top.mybatisdynamicsql.model.Employee">
        select * from employee
        <where>
            <choose>
                <when test="employee.id != null">
                    id=#{employee.id}
                </when>
                <when test="employee.empName != null and employee.empName!=''">
                    emp_name like #{employee.empName}
                </when>
                <!-- 查询所有 -->
                <otherwise>
                    1=1
                </otherwise>
            </choose>
        </where>
    </select>

<!--  ===================================================  -->
<!--    set 标签进行选择性更新操作（传入那些值就更新那些值）-->
    <update id="updateEmpBySet" parameterType="org.top.mybatisdynamicsql.model.Employee">
        update employee
        <set>
            <if test="employee.empName!=null and employee.empName!=''">
                emp_name=#{employee.empName},
            </if>
            <if test="employee.age!=null">
                age=#{employee.age},
            </if>
            <if test="employee.address">
                address=#{employee.address}
            </if>
        </set>
        where id =#{employee.id}
    </update>

     <!--  第二种:  -->
<!--    <update id="updateEmpBySet" parameterType="org.top.mybatisdynamicsql.model.Employee">-->
<!--        update employee set-->
<!--        <trim suffixOverrides=",">-->
<!--            <if test="employee.empName!=null and employee.empName!=''">-->
<!--                emp_name=#{employee.empName},-->
<!--            </if>-->
<!--            <if test="employee.age!=null">-->
<!--                age=#{employee.age},-->
<!--            </if>-->
<!--            <if test="employee.address">-->
<!--                address=#{employee.address}-->
<!--            </if>-->
<!--        </trim>-->
<!--        where id =#{employee.id}-->
<!--    </update>-->
    
    
<!--   =================================================== -->
<!--    foreach 标签的使用  -->
<!--  collection : 指定遍历的集合: （list类型的参数会特殊处理封装在Map中，Map中的key就叫list）  -->
<!--  item : 将传入的参数遍历出的元素赋值给指定的变量 -->
<!--  separator：指定元素之间的分隔符  -->
<!--  open ：遍历出所有结果拼装一个指定的开始符号  -->
<!--   close： 遍历出所有结果拼装一个指定的结束符号 -->
<!--    #{变量名}： 取出遍历的元素值 -->
<!--  index: 遍历List时，index是索引，item是遍历的元素值
              遍历Map时，index是Map的key，item是value   -->
    <select id="getEmpsByConditionForeach" resultType="org.top.mybatisdynamicsql.model.Employee">
        select * from employee where id in
<!--        <foreach collection="ids" item="item_id" separator="," open="(" close=")" index="index">-->
<!--            #{item_id}-->
<!--        </foreach>-->
<!--        <foreach collection="list" item="item_id" separator="," open="(" close=")" index="index">-->
<!--            #{item_id}-->
<!--        </foreach>-->
        <foreach collection="array" item="item_id" separator="," open="(" close=")" index="index">
            #{item_id}
        </foreach>
    </select>

<!--    foreach 批量保存  -->
    <insert id="batchSaveByConditionForeach" parameterType="org.top.mybatisdynamicsql.model.Employee">
        insert into employee(emp_name,age,address)
        values
        <foreach collection="emps" item="emp" separator="," >
            (#{emp.empName},#{emp.age},#{emp.address})
        </foreach>
    </insert>


<!--    bind 标签的使用  -->
    <select id="getEmpsByConditionBind" parameterType="string" resultType="org.top.mybatisdynamicsql.model.Employee">
    <bind name="empName" value="'%'+empName+'%'"/>
        select * from employee where emp_name like #{empName}
    </select>
</mapper>